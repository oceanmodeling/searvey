---
name: "Run Tests"

on: [ push ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: install Python
        uses: actions/setup-python@v2
      - name: install Poetry
        uses: snok/install-poetry@v1
      - name: load cached Python installation
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: test-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: lint with black
        run: black --check
      - name: lint with prospector
        run: make lint
      - name: mypy
        run: make mypy
  test:
    needs: lint
    name: test
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.9", "3.x" ]
    runs-on: ${{ matrix.os }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.12
      #----------------------------------------------
      #       load cached dependencies if cache exists
      #----------------------------------------------
      - name: load cached Python installation
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: test-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      # Run tests
      #----------------------------------------------
      - name: Run tests
        if: matrix.python-version != '3.x' || matrix.os != 'ubuntu-latest'
        run: pytest --numprocesses auto tests/
      - name: Run tests with coverage
        if: matrix.python-version == '3.x' && matrix.os == 'ubuntu-latest'
        run: |
          pytest --numprocesses auto --cov tests/ --cov-report xml:coverage.xml
          coverage report
